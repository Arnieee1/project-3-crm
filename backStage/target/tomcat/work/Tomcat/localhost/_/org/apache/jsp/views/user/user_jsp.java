/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2021-05-10 08:33:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class user_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("\tcontent=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".layui-form-item{\r\n");
      out.write("    margin-top: 30px;\r\n");
      out.write("}\r\n");
      out.write(".layui-form-item input{\r\n");
      out.write("    width:300px;\r\n");
      out.write("}\r\n");
      out.write(".layui-form-label {\r\n");
      out.write("    width:100px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"layui-form\" style=\"width:100%;margin-top: 20px;\">\r\n");
      out.write("\t    <blockquote class=\"layui-elem-quote quoteBox\">\r\n");
      out.write("\t    <!-- 必须要有查询用户的权限 -->\r\n");
      out.write("\t    ");
      if (_jspx_meth_shiro_005fhasPermission_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");
      if (_jspx_meth_shiro_005fhasPermission_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t</blockquote>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script type=\"text/html\" id=\"btnGroup\">\r\n");
      out.write("        ");
      if (_jspx_meth_shiro_005fhasPermission_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        ");
      if (_jspx_meth_shiro_005fhasPermission_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("    <script type=\"text/html\" id=\"statusTemplate\">\r\n");
      out.write("        {{# if(d.status == 0){ }}\r\n");
      out.write("            <input type=\"checkbox\"   lay-skin=\"switch\" lay-text=\"锁定|正常\" >\r\n");
      out.write("        {{# }else{ }}\r\n");
      out.write("            <input type=\"checkbox\"   lay-skin=\"switch\" lay-text=\"锁定|正常\" checked>\r\n");
      out.write("        {{# } }}\r\n");
      out.write("    </script>\r\n");
      out.write("\t<table id=\"userTable\" lay-filter=\"userTable\"></table>\r\n");
      out.write("\t<!-- 编辑添加框 -->\r\n");
      out.write("\t<!-- form外面要有一个div-->\r\n");
      out.write("\t<div style=\"margin-top: 50px;\" id=\"myform-div\" class=\"layui-hide\">\r\n");
      out.write("\t\t<form class=\"layui-form\" style=\"margin-left: 10px;\" lay-filter=\"myform\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"id\" style=\"width: 250px;\" />\r\n");
      out.write("\t\t\t<div class=\"layui-form-item\" style=\"margin-top: 15px;\">\r\n");
      out.write("\t\t\t\t<label class=\"layui-form-label\"><span style=\"color: red;font-size: 20px;margin-right: 5px;\">*</span>账号：</label>\r\n");
      out.write("\t\t\t\t<div class=\"layui-input-inline\">\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"account\" lay-verify=\"\" \r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"请输入账号\" autocomplete=\"off\" class=\"layui-input\" />\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<!-- <div class=\"layui-form-item\">\r\n");
      out.write("\t\t\t\t<label class=\"layui-form-label\"><span style=\"color: red;font-size: 20px;margin-right: 5px;\">*</span>密码：</label>\r\n");
      out.write("\t\t\t\t<div class=\"layui-input-inline\">\r\n");
      out.write("\t\t\t\t\t<input type=\"password\" name=\"password\" placeholder=\"请输入密码\" \r\n");
      out.write("\t\t\t\t\t\tautocomplete=\"off\" class=\"layui-input\" />\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"layui-form-item\">\r\n");
      out.write("\t\t\t\t<label class=\"layui-form-label\"><span style=\"color: red;font-size: 20px;margin-right: 5px;\">*</span>确认密码：</label>\r\n");
      out.write("\t\t\t\t<div class=\"layui-input-inline\">\r\n");
      out.write("\t\t\t\t\t<input type=\"password\" name=\"rePassword\" placeholder=\"请再次输入密码\" \r\n");
      out.write("\t\t\t\t\t\tautocomplete=\"off\" class=\"layui-input\" />\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div> -->\r\n");
      out.write("\t\t\t<div class=\"layui-form-item\">\r\n");
      out.write("\t\t\t\t<label class=\"layui-form-label\"><span style=\"color: red;font-size: 20px;margin-right: 5px;\">*</span>真实姓名：</label>\r\n");
      out.write("\t\t\t\t<div class=\"layui-input-inline\">\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"realName\" lay-verify=\"required\" \r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"请输入真实姓名\" autocomplete=\"off\" class=\"layui-input\" />\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"layui-form-item\">\r\n");
      out.write("                <label class=\"layui-form-label\"><span style=\"color: red;font-size: 20px;margin-right: 5px;\">*</span>手机号码：</label>\r\n");
      out.write("                <div class=\"layui-input-inline\">\r\n");
      out.write("                    <input type=\"text\" name=\"phoneNumber\" lay-verify=\"required|phone\" \r\n");
      out.write("                        placeholder=\"请输入手机号码\"  class=\"layui-input\" />\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"layui-form-item\">\r\n");
      out.write("                <label class=\"layui-form-label\"><span style=\"color: red;font-size: 20px;margin-right: 5px;\">*</span>电子邮箱：</label>\r\n");
      out.write("                <div class=\"layui-input-inline\">\r\n");
      out.write("                    <input type=\"text\" name=\"email\" lay-verify=\"\" \r\n");
      out.write("                        placeholder=\"请输入电子邮箱\" class=\"layui-input\" />\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("\t\t\t<div class=\"layui-form-item\" >\r\n");
      out.write("\t\t\t\t<label class=\"layui-form-label\"><span style=\"color: red;font-size: 20px;margin-right: 5px;\">*</span>职位：</label>\r\n");
      out.write("\t\t\t\t<div class=\"layui-input-inline\" style=\"width: 300px;\" lay-filter=\"role2\">\r\n");
      out.write("\t\t\t\t\t<select id=\"role2\"  name=\"roleId\" style=\"width: 100%;\" lay-verify=\"required\"  >\r\n");
      out.write("                        <option value=\"\">--数据加载中--</option>\r\n");
      out.write("\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<button type=\"button\" lay-submit lay-filter=\"formSubmit\"\r\n");
      out.write("\t\t\t\tid=\"submitButton\" class=\"layui-hide\"></button>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\tlayui.use([ 'table', 'form' ], function() {\r\n");
      out.write("\t\tvar formUrl = null;\r\n");
      out.write("\t\tvar table = layui.table;\r\n");
      out.write("\t\tvar form = layui.form;\r\n");
      out.write("\t\tvar layer = layui.layer;\r\n");
      out.write("\t\tvar $ = layui.$;\r\n");
      out.write("        var currentPage = 0;\r\n");
      out.write("        showRoles(\"role1\");\r\n");
      out.write("\t\t//form.render('select');\r\n");
      out.write("\t\t//showRoles(selectName);\r\n");
      out.write("\t\t//加载表格数据\r\n");
      out.write("\t\tvar tableload = layer.load(2);\r\n");
      out.write("\t\ttable.render({\r\n");
      out.write("\t\t\telem : '#userTable', //指定原始表格元素选择器（推荐id选择器）\r\n");
      out.write("\t\t\turl : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/user/findUser',\r\n");
      out.write("\t\t\teven : true,\r\n");
      out.write("\t\t\tid : 'userTable',\r\n");
      out.write("\t\t\tcols : [ [\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\tfield : \"account\",\r\n");
      out.write("\t\t\t\t\ttitle : \"用户名\"\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\tfield : \"realName\",\r\n");
      out.write("\t\t\t\t\ttitle : \"真实姓名\"\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("                    field : \"phoneNumber\",\r\n");
      out.write("                    title : \"电话号码\"\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    field : \"email\",\r\n");
      out.write("                    title : \"电子邮箱\"\r\n");
      out.write("                },\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\tfield : \"role\",\r\n");
      out.write("\t\t\t\t\ttitle : \"职位\",\r\n");
      out.write("\t\t\t\t\ttemplet : \"<div>{{d.role.name}}</div>\"\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("                    field : \"createTime\",\r\n");
      out.write("                    title : \"创建时间\",\r\n");
      out.write("                    sort : true,\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    field : \"lastLoginTime\",\r\n");
      out.write("                    title : \"上一次登录时间\",\r\n");
      out.write("                    sort : true,\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    title : \"锁定状态\",\r\n");
      out.write("                    align: \"center\",\r\n");
      out.write("                    templet : \"#statusTemplate\",\r\n");
      out.write("                    event: \"switch\",\r\n");
      out.write("                    width: \"12%\",\r\n");
      out.write("                },\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\tfixed : 'right',\r\n");
      out.write("\t\t\t\t\ttitle : \"操作\",\r\n");
      out.write("\t\t\t\t\talign : 'center',\r\n");
      out.write("\t\t\t\t\ttoolbar : '#btnGroup'\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t] ],\r\n");
      out.write("\t\t\tedit : \"text\", //单元格编辑类型（默认不开启）目前只支持：text（输入框）\r\n");
      out.write("\t\t\tlimit : 10,\r\n");
      out.write("\t\t\tlimits : [ 10, 20, 30, 40, 50, 60, 70, 80, 90 ],\r\n");
      out.write("\t\t\tloading : true, //分页加载样式\r\n");
      out.write("\t\t\tpage : true, //是否开启分页\r\n");
      out.write("\t\t\tdone : function(res, curr, count) {\r\n");
      out.write("\t\t\t\tcurrentPage = curr;\r\n");
      out.write("\t\t\t\tlayer.close(tableload);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\ttable.on('tool(userTable)', function(obj) {\r\n");
      out.write("\t\t\tvar data = obj.data;\r\n");
      out.write("\t\t\tif (obj.event === 'edit') {\r\n");
      out.write("\t\t\t\ttoUpdateUser(data);\r\n");
      out.write("\t\t\t} else if (obj.event === 'delete') {\r\n");
      out.write("\t\t\t\tlayer.confirm('确定要删除该用户吗？', function(index) {\r\n");
      out.write("\t\t\t\t\tlayer.close(index);\r\n");
      out.write("\t\t\t\t\tdeleteUser(data);\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t} else if(obj.event == 'switch'){\r\n");
      out.write("\t\t\t\t//正常状态和禁用状态的切换\r\n");
      out.write("                var submitStatus;\r\n");
      out.write("                if(data.status == 0){\r\n");
      out.write("                    submitStatus = 1;\r\n");
      out.write("                }else{\r\n");
      out.write("                    submitStatus = 0;\r\n");
      out.write("                }\r\n");
      out.write("                updateUserStatus(data.id , submitStatus);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t//更新用户的锁定状态\r\n");
      out.write("\t\tfunction updateUserStatus(id,status){\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : 'POST',\r\n");
      out.write("\t\t\t\turl : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/user/editUser',\r\n");
      out.write("\t\t\t\tdataType : 'json',\r\n");
      out.write("\t\t\t\tdata : {\r\n");
      out.write("\t\t\t\t\t'id' : id,\r\n");
      out.write("\t\t\t\t\t'status' : status\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsuccess : function(data){\r\n");
      out.write("\t\t\t\t\tif(data.success){\r\n");
      out.write("\t\t\t\t\t\tlayer.msg(data.msg);\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\tlayer.msg(data.msg);\r\n");
      out.write("\t\t\t\t\t\ttable.reload('userTable',{});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function(){\r\n");
      out.write("\t\t\t\t\tlayer.msg(\"服务器开小差了，请稍后再试...\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction toUpdateUser(data) {\r\n");
      out.write("\t\t\t//设置password为自定义检验\r\n");
      out.write("\t\t\t$(\"input[name='password']\").attr(\"lay-verify\", \"checkPasswd2\");\r\n");
      out.write("\t\t\t$(\"input[name='rePassword']\").attr(\"lay-verify\", \"checkPasswd2\"); //设置password为必要属性\r\n");
      out.write("\t\t\t$(\"input[name='account']\").attr(\"lay-verify\", \"required|username\"); \r\n");
      out.write("\t\t\t$(\"input[name='email']\").attr(\"lay-verify\", \"required|email\");\r\n");
      out.write("\t\t\t$(\"input[name='account']\").attr(\"readonly\", \"readonly\");\r\n");
      out.write("\t\t\tshowUserDiv('编辑用户');\r\n");
      out.write("\t\t\tconsole.log(data.roleId);\r\n");
      out.write("\t\t\tshowRoles('role2');\r\n");
      out.write("\t\t\t//设置值\r\n");
      out.write("\t\t\tform.val('myform', {\r\n");
      out.write("\t\t\t\t\"id\" : data.id,\r\n");
      out.write("\t\t\t\t\"account\" : data.account,\r\n");
      out.write("\t\t\t\t\"realName\" : data.realName,\r\n");
      out.write("\t\t\t\t\"roleId\" : data.roleId,\r\n");
      out.write("\t\t\t\t\"email\" : data.email,\r\n");
      out.write("\t\t\t\t\"phoneNumber\" : data.phoneNumber\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tformUrl = \"user/editUser\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//监听表单提交按钮\r\n");
      out.write("\t\tform.on('submit(formSubmit)', function(data) {\r\n");
      out.write("\t\t\tvar but = data.elem; //获取点击的按钮\r\n");
      out.write("\t\t\tvar loadanima = null;\r\n");
      out.write("\t\t\tvar formdata = data.field; //读取form表单中的数据 ,键值对形式\r\n");
      out.write("            console.log(formdata.id);\r\n");
      out.write("            \r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : \"POST\",\r\n");
      out.write("\t\t\t\turl : formUrl,\r\n");
      out.write("\t\t\t\tdata : formdata,\r\n");
      out.write("\t\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\t\t//请求前执行\r\n");
      out.write("\t\t\t\tbeforeSend : function() {\r\n");
      out.write("\t\t\t\t\t//给按钮添加禁用样式\r\n");
      out.write("\t\t\t\t\tbut.className += \" layui-btn-disabled\";\r\n");
      out.write("\t\t\t\t\t//显示加载动画\r\n");
      out.write("\t\t\t\t\tloadanima = layer.load(2);\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t//请求完成执行，无论请求是否成功\r\n");
      out.write("\t\t\t\tcomplete : function() {\r\n");
      out.write("\t\t\t\t\t//去除禁用属性\r\n");
      out.write("\t\t\t\t\tbut.className = but.className.replace(\"layui-btn-disabled\", \"\");\r\n");
      out.write("\t\t\t\t\t//关闭加载动画\r\n");
      out.write("\t\t\t\t\tlayer.close(loadanima);\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\t\tif (data.success) { //成功\r\n");
      out.write("\t\t\t\t\t\t//隐藏表单\r\n");
      out.write("\t\t\t\t\t\thideDiv();\r\n");
      out.write("\t\t\t\t\t\t//操作成功 重新加载表格数据\r\n");
      out.write("\t\t\t\t\t\tlayui.layer.open({\r\n");
      out.write("\t\t\t\t\t\t\tcontent : '操作成功!',\r\n");
      out.write("\t\t\t\t\t\t\tbtn : [ '确认' ],\r\n");
      out.write("\t\t\t\t\t\t\tyes : function(index, layero) {\r\n");
      out.write("\t\t\t\t\t\t\t\t//执行重载\r\n");
      out.write("\t\t\t\t\t\t\t\tlayer.closeAll();\r\n");
      out.write("\t\t\t\t\t\t\t\ttable.reload('userTable');\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tcancel : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t//执行重载\r\n");
      out.write("\t\t\t\t\t\t\t\tlayer.closeAll();\r\n");
      out.write("\t\t\t\t\t\t\t\ttable.reload('userTable');\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t\t} else { //失败\r\n");
      out.write("\t\t\t\t\t\t//隐藏表单\r\n");
      out.write("\t\t\t\t\t\thideDiv();\r\n");
      out.write("\t\t\t\t\t\t//操作成功 重新加载表格数据\r\n");
      out.write("\t\t\t\t\t\tlayui.layer.open({\r\n");
      out.write("\t\t\t\t\t\t\tcontent : '操作失败!',\r\n");
      out.write("\t\t\t\t\t\t\tbtn : [ '确认' ],\r\n");
      out.write("\t\t\t\t\t\t\tyes : function(index, layero) {\r\n");
      out.write("\t\t\t\t\t\t\t\tlayer.closeAll();\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tcancel : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t//执行重载\r\n");
      out.write("\t\t\t\t\t\t\t\tlayer.closeAll();\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function() {\r\n");
      out.write("\t\t\t\t\tlayer.msg(\"服务器开小差了，请稍后再试...\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\treturn false; //阻止表单跳转。如果需要表单跳转，去掉这段即可。\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tfunction hideDiv() {\r\n");
      out.write("\t\t\tlayer.closeAll('page');\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//显示添加表单\r\n");
      out.write("\t\tfunction showUserDiv(title) {\r\n");
      out.write("\t\t    showRoles('role2');\r\n");
      out.write("\t\t\tvar html = '';\r\n");
      out.write("\t\t\tvar window = layer.open({\r\n");
      out.write("\t\t\t\ttype : 1,\r\n");
      out.write("\t\t\t\ttitle : title,\r\n");
      out.write("\t\t\t\tcloseBtn : 2,\r\n");
      out.write("\t\t\t\tarea : [ '530px', '450px' ],\r\n");
      out.write("\t\t\t\tbtn : [ '确定', '取消' ],\r\n");
      out.write("\t\t\t\tbtn1 : function() {\r\n");
      out.write("\t\t\t\t\t$(\"#submitButton\").click();\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tshadeClose : false,\r\n");
      out.write("\t\t\t\tcontent : '<div id=\"show-form-div\"></div>',\r\n");
      out.write("\t\t\t\tend : function() {\r\n");
      out.write("\t\t\t\t\t$('#myform-div').html(html);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\thtml = $('#myform-div').html();\r\n");
      out.write("\t\t\t$('#myform-div').html(\"\");\r\n");
      out.write("\t\t\t$('#show-form-div').html(html);\r\n");
      out.write("\t\t\treturn window;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//搜索功能\r\n");
      out.write("\t\tvar active = {\r\n");
      out.write("\t\t\treload : function() {\r\n");
      out.write("\t\t\t\tvar realName = $(\"input[name='realName']\");\r\n");
      out.write("\t\t\t\tvar roleId = $(\"select[name='roleId']\");\r\n");
      out.write("\t\t\t\tvar account = $(\"input[name='account']\");\r\n");
      out.write("\t\t\t\t//执行重载\r\n");
      out.write("\t\t\t\ttable.reload('userTable', {\r\n");
      out.write("\t\t\t\t\tpage : {\r\n");
      out.write("\t\t\t\t\t\tcurr : 1 //重新从第 1 页开始\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\twhere : {\r\n");
      out.write("\t\t\t\t\t\t\"realName\" : realName.val(),\r\n");
      out.write("\t\t\t\t\t\t\"roleId\" : roleId.val(),\r\n");
      out.write("\t\t\t\t\t\t\"account\" : account.val()\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t$('#searchBtn').on('click', function() {\r\n");
      out.write("\t\t\tactive['reload'] ? active['reload'].call(this) : '';\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\tfunction deleteUser(data) {\r\n");
      out.write("\t\t\tvar load = null;\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : \"POST\",\r\n");
      out.write("\t\t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/user/deleteUser\",\r\n");
      out.write("\t\t\t\tdata : {\r\n");
      out.write("\t\t\t\t\t\"id\" : data.id\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\t\t//请求前执行，无论请求是否成功\r\n");
      out.write("\t\t\t\tbeforeSend : function() {\r\n");
      out.write("\t\t\t\t\t//显示加载动画\r\n");
      out.write("\t\t\t\t\tload = layer.load(2);\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tcomplete : function() {\r\n");
      out.write("\t\t\t\t\t//关闭加载动画\r\n");
      out.write("\t\t\t\t\tlayer.close(load);\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\t\tif (data.success) {\r\n");
      out.write("\t\t\t\t\t\t//隐藏表单\r\n");
      out.write("\t\t\t\t\t\thideDiv();\r\n");
      out.write("\t\t\t\t\t\t//操作成功 重新加载表格数据\r\n");
      out.write("\t\t\t\t\t\tlayui.layer.open({\r\n");
      out.write("\t\t\t\t\t\t\tcontent : '删除成功!',\r\n");
      out.write("\t\t\t\t\t\t\tbtn : [ '确认' ],\r\n");
      out.write("\t\t\t\t\t\t\tyes : function(index, layero) {\r\n");
      out.write("\t\t\t\t\t\t\t\t//执行重载\r\n");
      out.write("\t\t\t\t\t\t\t\tlayer.closeAll();\r\n");
      out.write("\t\t\t\t\t\t\t\ttable.reload('userTable', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tpage : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcurr : 1 //重新从第 1 页开始\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tcancel : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t//执行重载\r\n");
      out.write("\t\t\t\t\t\t\t\tlayer.closeAll();\r\n");
      out.write("\t\t\t\t\t\t\t\ttable.reload('userTable', {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tpage : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tcurr : 1 //重新从第 1 页开始\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function() {\r\n");
      out.write("\t\t\t\t\t//隐藏表单\r\n");
      out.write("\t\t\t\t\thideDiv();\r\n");
      out.write("\t\t\t\t\t//操作成功 重新加载表格数据\r\n");
      out.write("\t\t\t\t\tlayui.layer.open({\r\n");
      out.write("\t\t\t\t\t\tcontent : '删除失败!',\r\n");
      out.write("\t\t\t\t\t\tbtn : [ '确认' ],\r\n");
      out.write("\t\t\t\t\t\tyes : function(index, layero) {\r\n");
      out.write("\t\t\t\t\t\t\tlayer.closeAll();\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tcancel : function() {\r\n");
      out.write("\t\t\t\t\t\t\tlayer.closeAll();\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//点击添加按钮后的处理\r\n");
      out.write("\t\t$('#addBtn').click(function() {\r\n");
      out.write("\t\t\t//设置password为必要属性\r\n");
      out.write("\t\t\t$(\"input[name='account']\").removeAttr(\"readonly\");\r\n");
      out.write("\t\t\t$(\"input[name='password']\").attr(\"lay-verify\", \"checkPasswd1|password\");\r\n");
      out.write("\t\t\t$(\"input[name='rePassword']\").attr(\"lay-verify\", \"checkPasswd1|password\");\r\n");
      out.write("\t\t\t$(\"input[name='email']\").attr(\"lay-verify\", \"required|email|checkEmail\");\r\n");
      out.write("\t\t\t$(\"input[name='account']\").attr(\"lay-verify\", \"required|username|checkAccount\");\r\n");
      out.write("\t\t\t//显示表单\r\n");
      out.write("\t\t\tshowUserDiv('添加用户（初始密码：123456）');\r\n");
      out.write("\t\t\t//设置值\r\n");
      out.write("\t\t\tform.val('myform', {\r\n");
      out.write("\t\t\t\t\"id\" : \"\",\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t\t//设置form表单提交地址\r\n");
      out.write("\t\t\tformUrl = \"user/addUser\"; //重要，必填属性\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tform.verify({\r\n");
      out.write("\t\t\t//自定义验证\r\n");
      out.write("\t\t\tcheckPasswd1 : function(value, item) {\r\n");
      out.write("\t\t\t\tif (value == '') {\r\n");
      out.write("\t\t\t\t\treturn '必填项不能为空'\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif (item.name == 'password' && $(\"input[name='rePassword']\").val() != value) {\r\n");
      out.write("\t\t\t\t\treturn '两次输入密码不一致'\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif (item.name == 'rePassword' && $(\"input[name='password']\").val() != value) {\r\n");
      out.write("\t\t\t\t\treturn '两次输入密码不一致'\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t//自定义验证\r\n");
      out.write("\t\t\tcheckPasswd2 : function(value, item) {\r\n");
      out.write("\t\t\t\tif (item.name == 'password' && $(\"input[name='rePassword']\").val() != value) {\r\n");
      out.write("\t\t\t\t\treturn '两次输入密码不一致'\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif (item.name == 'rePassword' && $(\"input[name='password']\").val() != value) {\r\n");
      out.write("\t\t\t\t\treturn '两次输入密码不一致'\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\t//自定义验证\r\n");
      out.write("            checkAccount : function(value, item) {\r\n");
      out.write("                var flag;\r\n");
      out.write("                if (item.name == 'account') {\r\n");
      out.write("                    $.ajax({\r\n");
      out.write("                    \ttype : 'POST',\r\n");
      out.write("                    \turl : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/user/checkUserAccount',\r\n");
      out.write("                    \tasync : false,\r\n");
      out.write("                    \tdata : {\r\n");
      out.write("                    \t\t'account' : value\r\n");
      out.write("                    \t},\r\n");
      out.write("                    \tdataType : 'json',\r\n");
      out.write("                    \tsuccess : function(data){\r\n");
      out.write("                    \t    console.log(data);\r\n");
      out.write("                    \t\tflag = data.success;\r\n");
      out.write("                    \t}             \t\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("                if(flag == false){\r\n");
      out.write("                    return '该账号已存在！';\r\n");
      out.write("                }\r\n");
      out.write("            },\r\n");
      out.write("            //用户名验证\r\n");
      out.write("            username: function(value, item){ //value：表单的值、item：表单的DOM对象\r\n");
      out.write("                if(!new RegExp(\"^[a-zA-Z0-9_\\u4e00-\\u9fa5\\\\s·]+$\").test(value)){\r\n");
      out.write("                  return '用户名不能有特殊字符';\r\n");
      out.write("                }\r\n");
      out.write("                if(/(^\\_)|(\\__)|(\\_+$)/.test(value)){\r\n");
      out.write("                  return '用户名首尾不能出现下划线\\'_\\'';\r\n");
      out.write("                }\r\n");
      out.write("                if(/^\\d+\\d+\\d$/.test(value)){\r\n");
      out.write("                  return '用户名不能全为数字';\r\n");
      out.write("                }\r\n");
      out.write("              },    \r\n");
      out.write("            //我们既支持上述函数式的方式，也支持下述数组的形式\r\n");
      out.write("            //数组的两个值分别代表：[正则匹配、匹配不符时的提示文字]\r\n");
      out.write("            password: [\r\n");
      out.write("            /^[\\S]{6,12}$/\r\n");
      out.write("              ,'密码必须6到12位，且不能出现空格'\r\n");
      out.write("            ],\r\n");
      out.write("            checkEmail : function(value,item){\r\n");
      out.write("                var flag;\r\n");
      out.write("                if(value == null || value == ''){\r\n");
      out.write("                    return '邮箱不可以为空！';\r\n");
      out.write("                }\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    type : 'POST',\r\n");
      out.write("                    url : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/user/checkUserEmail',\r\n");
      out.write("                    async : false,\r\n");
      out.write("                    data : {\r\n");
      out.write("                        'email' : value\r\n");
      out.write("                    },\r\n");
      out.write("                    dataType : 'json',\r\n");
      out.write("                    success : function(data){\r\n");
      out.write("                        console.log(data);\r\n");
      out.write("                        flag = data.success;\r\n");
      out.write("                    }               \r\n");
      out.write("                });\r\n");
      out.write("                if(flag == false){\r\n");
      out.write("                    return '该邮箱已被使用！';\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//展示角色菜单\r\n");
      out.write("\t\tfunction showRoles(selectName){\r\n");
      out.write("\t\t  var load = null;\r\n");
      out.write("\t\t  $.ajax({\r\n");
      out.write("                type : \"POST\",\r\n");
      out.write("                async: false,\r\n");
      out.write("                url : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/user/findRoles\",\r\n");
      out.write("                dataType : \"json\",\r\n");
      out.write("                \r\n");
      out.write("                //请求前执行，无论请求是否成功\r\n");
      out.write("                beforeSend : function() {\r\n");
      out.write("                    //显示加载动画\r\n");
      out.write("                    load = layer.load(2);\r\n");
      out.write("                },\r\n");
      out.write("                complete : function() {\r\n");
      out.write("                    //关闭加载动画\r\n");
      out.write("                    layer.close(load);\r\n");
      out.write("                },\r\n");
      out.write("                success : function(data) {\r\n");
      out.write("                    var html = '';\r\n");
      out.write("                    if (data.success) {\r\n");
      out.write("                        $(\"#\"+selectName+\"\").html(\"\");\r\n");
      out.write("                        roles = data.list;\r\n");
      out.write("                        html += \"<option value=''></option>\";\r\n");
      out.write("                        for(i = 0 ; i < roles.length ; i++ ){\r\n");
      out.write("                            /* var selectedHtml = \"\"; */\r\n");
      out.write("                            /* if(roles[i].id == roleId){\r\n");
      out.write("                                selectedHtml = \" selected \";\r\n");
      out.write("                            } */\r\n");
      out.write("                            html += \"<option value='\"+roles[i].id+\"'>\"+roles[i].name+\"</option>\";\r\n");
      out.write("                        }\r\n");
      out.write("                        $(\"#\"+selectName+\"\").html(html);\r\n");
      out.write("                    }\r\n");
      out.write("                    form.render('select');\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("\t\t};\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f0 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    _jspx_th_shiro_005fhasPermission_005f0.setPageContext(_jspx_page_context);
    _jspx_th_shiro_005fhasPermission_005f0.setParent(null);
    // /views/user/user.jsp(28,5) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_shiro_005fhasPermission_005f0.setName("1001");
    int _jspx_eval_shiro_005fhasPermission_005f0 = _jspx_th_shiro_005fhasPermission_005f0.doStartTag();
    if (_jspx_eval_shiro_005fhasPermission_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("\t\t\t<label style=\"margin-left: 20px;\" style=\"\" class=\"layui-label\">用户名：</label>\r\n");
        out.write("\t\r\n");
        out.write("\t\t\t<div style=\"width: 120px;\" class=\"layui-inline\">\r\n");
        out.write("\t\t\t\t<input type=\"text\" name=\"account\" placeholder=\"请输入用户名\"\r\n");
        out.write("\t\t\t\t\tautocomplete=\"off\" class=\"layui-input\">\r\n");
        out.write("\t\t\t</div>\r\n");
        out.write("\t\r\n");
        out.write("\t\t\t<label style=\"margin-left: 20px;\" style=\"\" class=\"layui-label\">真实姓名：</label>\r\n");
        out.write("\t\r\n");
        out.write("\t\t\t<div style=\"width: 120px;\" class=\"layui-inline\">\r\n");
        out.write("\t\t\t\t<input type=\"text\" name=\"realName\" placeholder=\"请输入真实姓名\"\r\n");
        out.write("\t\t\t\t\tautocomplete=\"off\" class=\"layui-input\">\r\n");
        out.write("\t\t\t</div>\r\n");
        out.write("\t\r\n");
        out.write("\t\t\t<label style=\"margin-left: 20px;\" class=\"layui-label\">职位：</label>\r\n");
        out.write("\t\r\n");
        out.write("\t\t\t<div style=\"width: 120px;\" class=\"layui-inline\" lay-filter=\"role1\">\r\n");
        out.write("\t\t\t\t<select id=\"role1\" name=\"roleId\" style=\"width:100%;\" lay-verify=\"required\">\r\n");
        out.write("\t\t\t\t    <option value=\"\">--数据加载中--</option>\r\n");
        out.write("\t\t\t\t</select>\r\n");
        out.write("\t\t\t</div>\r\n");
        out.write("\t\r\n");
        out.write("\t\t\t<button style=\"margin-left: 20px;\" id=\"searchBtn\" class=\"layui-btn\"\r\n");
        out.write("\t\t\t\ttype=\"button\" lay-filter=\"userForm\">搜索</button>\r\n");
        out.write("\t\t");
        int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_shiro_005fhasPermission_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f0);
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f1 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    _jspx_th_shiro_005fhasPermission_005f1.setPageContext(_jspx_page_context);
    _jspx_th_shiro_005fhasPermission_005f1.setParent(null);
    // /views/user/user.jsp(55,2) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_shiro_005fhasPermission_005f1.setName("1003");
    int _jspx_eval_shiro_005fhasPermission_005f1 = _jspx_th_shiro_005fhasPermission_005f1.doStartTag();
    if (_jspx_eval_shiro_005fhasPermission_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("\t\t    <button id=\"addBtn\" class=\"layui-btn layui-btn-normal\">添加</button>\r\n");
        out.write("\t\t");
        int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_shiro_005fhasPermission_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f1);
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f2 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    _jspx_th_shiro_005fhasPermission_005f2.setPageContext(_jspx_page_context);
    _jspx_th_shiro_005fhasPermission_005f2.setParent(null);
    // /views/user/user.jsp(62,8) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_shiro_005fhasPermission_005f2.setName("1002");
    int _jspx_eval_shiro_005fhasPermission_005f2 = _jspx_th_shiro_005fhasPermission_005f2.doStartTag();
    if (_jspx_eval_shiro_005fhasPermission_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write(" <a class=\"layui-btn layui-btn-xs\" lay-event=\"edit\">编辑</a>");
        int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f2.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_shiro_005fhasPermission_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f2);
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f3 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    _jspx_th_shiro_005fhasPermission_005f3.setPageContext(_jspx_page_context);
    _jspx_th_shiro_005fhasPermission_005f3.setParent(null);
    // /views/user/user.jsp(63,8) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_shiro_005fhasPermission_005f3.setName("1004");
    int _jspx_eval_shiro_005fhasPermission_005f3 = _jspx_th_shiro_005fhasPermission_005f3.doStartTag();
    if (_jspx_eval_shiro_005fhasPermission_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("<a class=\"layui-btn layui-btn-danger layui-btn-xs\" lay-event=\"delete\">删除</a>");
        int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f3.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_shiro_005fhasPermission_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f3);
      return true;
    }
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f3);
    return false;
  }
}
