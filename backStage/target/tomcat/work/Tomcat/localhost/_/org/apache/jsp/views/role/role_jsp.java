/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2021-05-10 06:52:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.role;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class role_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("    content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"layui-form\" style=\"width:100%;margin-top: 20px;\">\r\n");
      out.write("        <blockquote class=\"layui-elem-quote quoteBox\">\r\n");
      out.write("            ");
      if (_jspx_meth_shiro_005fhasPermission_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t        ");
      if (_jspx_meth_shiro_005fhasPermission_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("        </blockquote>\r\n");
      out.write("    </div>\r\n");
      out.write("    <script type=\"text/html\" id=\"btnGroup\">\r\n");
      out.write("        ");
      if (_jspx_meth_shiro_005fhasPermission_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        ");
      if (_jspx_meth_shiro_005fhasPermission_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        ");
      if (_jspx_meth_shiro_005fhasPermission_005f4(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("    <table id=\"roleTable\" lay-filter=\"roleTable\"></table>\r\n");
      out.write("    <!-- 编辑添加框 -->\r\n");
      out.write("    <!-- form外面要有一个div-->\r\n");
      out.write("    <div id=\"myform-div\" class=\"layui-hide\">\r\n");
      out.write("        <form class=\"layui-form\" lay-filter=\"myform\">\r\n");
      out.write("            <div style=\"margin-top: 15px;\" class=\"layui-form-item\">\r\n");
      out.write("                <label class=\"layui-form-label\">职位编号：</label>\r\n");
      out.write("                <div class=\"layui-input-inline\">\r\n");
      out.write("                    <input type=\"text\" name=\"id\" readonly=\"readonly\" style=\"width: 250px;\"\r\n");
      out.write("                        placeholder=\"由系统设置\" autocomplete=\"off\" class=\"layui-input\"  />\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div style=\"width:100%;\" class=\"layui-form-item\">\r\n");
      out.write("                <label class=\"layui-form-label\">角色名：</label>\r\n");
      out.write("                <div class=\"layui-input-inline\">\r\n");
      out.write("                    <input type=\"text\" name=\"name\" lay-verify=\"required\" style=\"width: 250px;\"\r\n");
      out.write("                        placeholder=\"请输入职位名\" autocomplete=\"off\" class=\"layui-input\" />\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div style=\"width:100%;\" class=\"layui-form-item\">\r\n");
      out.write("                <label class=\"layui-form-label\">角色描述：</label>\r\n");
      out.write("                <div class=\"layui-input-block\">\r\n");
      out.write("                    <textarea name=\"description\" style=\"width: 250px; height:200px;\"  \r\n");
      out.write("                        placeholder=\"请输入职位描述\" class=\"layui-textarea\"></textarea>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <button type=\"button\" lay-submit lay-filter=\"formSubmit\"\r\n");
      out.write("                id=\"submitButton\" class=\"layui-hide\"></button>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<!-- 引入treejs -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"./layui/layui-xtree.js\" ></script>\r\n");
      out.write("<script>\r\n");
      out.write("    layui.use([ 'table', 'form', 'tree', 'layer'], function() {\r\n");
      out.write("        var formUrl = null;\r\n");
      out.write("        var table = layui.table;\r\n");
      out.write("        var form = layui.form;\r\n");
      out.write("        var layer = layui.layer;\r\n");
      out.write("        var $ = layui.$;\r\n");
      out.write("        \r\n");
      out.write("        var curPage;\r\n");
      out.write("        \r\n");
      out.write("        //加载表格数据\r\n");
      out.write("        var tableload = layer.load(2);\r\n");
      out.write("        table.render({\r\n");
      out.write("            elem : '#roleTable', //指定原始表格元素选择器（推荐id选择器）\r\n");
      out.write("            url : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/role/findRoles',\r\n");
      out.write("            even : true,\r\n");
      out.write("            id : 'roleTable',\r\n");
      out.write("            cols : [ [\r\n");
      out.write("                {\r\n");
      out.write("                    type : 'numbers',\r\n");
      out.write("                    width: \"4%\"\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    field : \"id\",\r\n");
      out.write("                    title : \"职位编号\",\r\n");
      out.write("                    width: \"10%\",\r\n");
      out.write("                    sort : true\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    field : \"name\",\r\n");
      out.write("                    width: \"15%\",\r\n");
      out.write("                    title : \"职位名\"\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    field : \"description\",\r\n");
      out.write("                    width: \"50%\",\r\n");
      out.write("                    title : \"职位描述\"\r\n");
      out.write("                },\r\n");
      out.write("                {\r\n");
      out.write("                    fixed : 'right',\r\n");
      out.write("                    title : \"操作\",\r\n");
      out.write("                    align : 'center',\r\n");
      out.write("                    width: \"18%\",\r\n");
      out.write("                    toolbar : '#btnGroup'\r\n");
      out.write("                }\r\n");
      out.write("            ] ],\r\n");
      out.write("            edit : \"text\", //单元格编辑类型（默认不开启）目前只支持：text（输入框）\r\n");
      out.write("            limit : 10,\r\n");
      out.write("            limits : [ 10, 20, 30, 40, 50, 60, 70, 80, 90 ],\r\n");
      out.write("            loading : true, //分页加载样式\r\n");
      out.write("            page : true, //是否开启分页\r\n");
      out.write("            done : function(res, curr, count) {\r\n");
      out.write("                layer.close(tableload);\r\n");
      out.write("                curPage = curr; //当前页\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        table.on('tool(roleTable)', function(obj) {\r\n");
      out.write("            var data = obj.data;\r\n");
      out.write("            if (obj.event === 'edit') {\r\n");
      out.write("                toUpdateRole(data);\r\n");
      out.write("            } else if (obj.event === 'delete') {\r\n");
      out.write("                layer.confirm('确定要删除该职位吗？', function(index) {\r\n");
      out.write("                    layer.close(index);\r\n");
      out.write("                    deleteRole(data);\r\n");
      out.write("                });\r\n");
      out.write("            } else if(obj.event == 'allot'){\r\n");
      out.write("            \t//权限分配\r\n");
      out.write("            \tlayer.open({\r\n");
      out.write("            \t\ttype: \"1\",\r\n");
      out.write("            \t\tcontent: '<form class=\"layui-form\"><div id=\"permissionTree\"></div><button style=\"margin: 20px 0 20px 20px\" type=\"button\" id=\"allotBtn\" class=\"layui-btn\">确定</button></form>',\r\n");
      out.write("            \t\tarea:['500px', '500px'],\r\n");
      out.write("            \t\toffset: '100px',\r\n");
      out.write("            \t\tsuccess:function(layero, index){\r\n");
      out.write("            \t\t\t\r\n");
      out.write("            \t\t\tgetPermissionTree(data.id);  //传入角色的id\r\n");
      out.write("            \t\t\t\r\n");
      out.write("                        permissionTree = new layuiXtree({\r\n");
      out.write("                            elem: 'permissionTree',   //(必填) 放置xtree的容器id，不要带#号\r\n");
      out.write("                            form: form,     //(必填) layui 的 from\r\n");
      out.write("                            data: permissionJson,    //(必填) json数组（数据格式在下面）\r\n");
      out.write("                            ckall: true,    //启用全选功能，默认值：false\r\n");
      out.write("                            color: {       //三种图标颜色，独立配色，更改几个都可以\r\n");
      out.write("                                open: \"#EE9A00\",        //节点图标打开的颜色\r\n");
      out.write("                                close: \"#EEC591\",    //节点图标关闭的颜色\r\n");
      out.write("                                end: \"#828282\",     //末级节点图标的颜色\r\n");
      out.write("                            },\r\n");
      out.write("                            ckallback: function () { //全选框状态改变后执行的回调函数\r\n");
      out.write("                            \t\r\n");
      out.write("                            },\r\n");
      out.write("                            click: function (data) {  //节点选中状态改变事件监听，全选框有自己的监听事件\r\n");
      out.write("                                //console.log(data.value); //开关value值，也可以通过data.elem.value得到\r\n");
      out.write("                            },\r\n");
      out.write("                        });\r\n");
      out.write("                        \r\n");
      out.write("                        ///确认分配按钮点击后\r\n");
      out.write("                        $(\"#allotBtn\").click(function(){\r\n");
      out.write("                        \tvar checked = [];\r\n");
      out.write("                        \t$(\"input.layui-xtree-checkbox:checked\").each(function(){\r\n");
      out.write("                        \t\tif(!$(this).hasClass(\"layui-xtree-ckall\")){\r\n");
      out.write("                        \t\t\tchecked.push($(this).val());\r\n");
      out.write("                        \t\t}\r\n");
      out.write("                        \t});\r\n");
      out.write("                        \t//提交分配权限操作\r\n");
      out.write("                        \t$.ajax({\r\n");
      out.write("                        \t\turl:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/role/allotPermission\",\r\n");
      out.write("                        \t\ttype:\"post\",\r\n");
      out.write("                        \t\tdata:{\r\n");
      out.write("                        \t\t\t\"permissionIds[]\" : checked, //List\r\n");
      out.write("                        \t\t\t\"roleId\" : data.id,\r\n");
      out.write("                        \t\t},\r\n");
      out.write("                        \t\ttraditional: true,\r\n");
      out.write("                        \t\tbeforeSend:function(){\r\n");
      out.write("                        \t\t\tloading = layer.load();\r\n");
      out.write("                        \t\t},\r\n");
      out.write("                        \t\tsuccess:function(result){\r\n");
      out.write("                        \t\t\tif(result != null && result.code == 0){\r\n");
      out.write("                        \t\t\t\tlayer.closeAll();\r\n");
      out.write("                        \t\t\t\tlayer.msg(\"分配成功!\");\r\n");
      out.write("                        \t\t\t\ttable.reload(\"roleTable\");  //重新加载表格数据\r\n");
      out.write("                        \t\t\t}else{\r\n");
      out.write("                        \t\t\t\tlayer.msg(\"分配失败!\");\r\n");
      out.write("                        \t\t\t}\r\n");
      out.write("                        \t\t},\r\n");
      out.write("                        \t\terror:function(){\r\n");
      out.write("                        \t\t\tlayer.msg(\"服务器开小差了!\");\r\n");
      out.write("                        \t\t},\r\n");
      out.write("                        \t\tcomplete:function(){\r\n");
      out.write("                        \t\t\tlayer.close(loading);\r\n");
      out.write("                        \t\t}\r\n");
      out.write("                        \t});\r\n");
      out.write("                        });\r\n");
      out.write("            \t\t},\r\n");
      out.write("            \t});\r\n");
      out.write("            \t\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        function toUpdateRole(data) {\r\n");
      out.write("            //设置password为自定义检验\r\n");
      out.write("            showRoleDiv('编辑职位');\r\n");
      out.write("            console.log(data.id);\r\n");
      out.write("            //设置值\r\n");
      out.write("            form.val('myform', {\r\n");
      out.write("                \"id\" : data.id,\r\n");
      out.write("                \"name\" : data.name,\r\n");
      out.write("                \"description\" : data.description\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            formUrl = \"role/editRole\";\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        //监听表单提交按钮\r\n");
      out.write("        form.on('submit(formSubmit)', function(data) {\r\n");
      out.write("            var but = data.elem; //获取点击的按钮\r\n");
      out.write("            var loadanima = null;\r\n");
      out.write("            var formdata = data.field; //读取form表单中的数据 ,键值对形式\r\n");
      out.write("\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                type : \"POST\",\r\n");
      out.write("                url : formUrl,\r\n");
      out.write("                data : formdata,\r\n");
      out.write("                dataType : \"json\",\r\n");
      out.write("                //请求前执行\r\n");
      out.write("                beforeSend : function() {\r\n");
      out.write("                    //给按钮添加禁用样式\r\n");
      out.write("                    but.className += \" layui-btn-disabled\";\r\n");
      out.write("                    //console.log(but.className);\r\n");
      out.write("                    //显示加载动画\r\n");
      out.write("                    loadanima = layer.load(2);\r\n");
      out.write("                },\r\n");
      out.write("                //请求完成执行，无论请求是否成功\r\n");
      out.write("                complete : function() {\r\n");
      out.write("                    //去除禁用属性\r\n");
      out.write("                    but.className = but.className.replace(\"layui-btn-disabled\", \"\");\r\n");
      out.write("                    //关闭加载动画\r\n");
      out.write("                    layer.close(loadanima);\r\n");
      out.write("                },\r\n");
      out.write("                success : function(data) {\r\n");
      out.write("                    if (data.success) { //成功\r\n");
      out.write("                        //隐藏表单\r\n");
      out.write("                        hideDiv();\r\n");
      out.write("                        //操作成功 重新加载表格数据\r\n");
      out.write("                        layui.layer.open({\r\n");
      out.write("                            content : '操作成功!',\r\n");
      out.write("                            btn : [ '确认' ],\r\n");
      out.write("                            yes : function(index, layero) {\r\n");
      out.write("                                //执行重载\r\n");
      out.write("                                layer.closeAll();\r\n");
      out.write("                                table.reload('roleTable');\r\n");
      out.write("                            },\r\n");
      out.write("                            cancel : function() {\r\n");
      out.write("                                //执行重载\r\n");
      out.write("                                layer.closeAll();\r\n");
      out.write("                                table.reload('roleTable');\r\n");
      out.write("                            },\r\n");
      out.write("                        })\r\n");
      out.write("                    } else { //失败\r\n");
      out.write("                        //隐藏表单\r\n");
      out.write("                        hideDiv();\r\n");
      out.write("                        //操作成功 重新加载表格数据\r\n");
      out.write("                        layui.layer.open({\r\n");
      out.write("                            content : '操作失败!',\r\n");
      out.write("                            btn : [ '确认' ],\r\n");
      out.write("                            yes : function(index, layero) {\r\n");
      out.write("                                layer.closeAll();\r\n");
      out.write("                            },\r\n");
      out.write("                            cancel : function() {\r\n");
      out.write("                                //执行重载\r\n");
      out.write("                                layer.closeAll();\r\n");
      out.write("                            },\r\n");
      out.write("                        });\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                },\r\n");
      out.write("                error : function() {\r\n");
      out.write("                    layer.msg(\"服务器开小差了，请稍后再试...\");\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("            return false; //阻止表单跳转。如果需要表单跳转，去掉这段即可。\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        function hideDiv() {\r\n");
      out.write("            layer.closeAll('page');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        //显示添加表单\r\n");
      out.write("        function showRoleDiv(title) {\r\n");
      out.write("            var html = '';\r\n");
      out.write("            var window = layer.open({\r\n");
      out.write("                type : 1,\r\n");
      out.write("                title : title,\r\n");
      out.write("                closeBtn : 2,\r\n");
      out.write("                area : [ '400px', '450px' ],\r\n");
      out.write("                btn : [ '确定', '取消' ],\r\n");
      out.write("                btn1 : function() {\r\n");
      out.write("                    $(\"#submitButton\").click();\r\n");
      out.write("                },\r\n");
      out.write("                shadeClose : false,\r\n");
      out.write("                content : '<div id=\"show-form-div\"></div>',\r\n");
      out.write("                end : function() {\r\n");
      out.write("                    $('#myform-div').html(html);\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("            html = $('#myform-div').html();\r\n");
      out.write("            $('#myform-div').html(\"\");\r\n");
      out.write("            $('#show-form-div').html(html);\r\n");
      out.write("            return window;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        //搜索功能\r\n");
      out.write("        var active = {\r\n");
      out.write("            reload : function() {\r\n");
      out.write("                var name = $(\"#roleName\").val();\r\n");
      out.write("                //执行重载\r\n");
      out.write("                table.reload('roleTable', {\r\n");
      out.write("                    page : {\r\n");
      out.write("                        curr : 1 //重新从第 1 页开始\r\n");
      out.write("                    },\r\n");
      out.write("                    where : {\r\n");
      out.write("                        \"name\" : name\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("        };\r\n");
      out.write("        $('#searchBtn').on('click', function() {\r\n");
      out.write("            active['reload'] ? active['reload'].call(this) : '';\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        function deleteRole(data) {\r\n");
      out.write("            var load = null;\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                type : \"POST\",\r\n");
      out.write("                url : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/role/deleteRole\",\r\n");
      out.write("                data : {\r\n");
      out.write("                    \"id\" : data.id\r\n");
      out.write("                },\r\n");
      out.write("                dataType : \"json\",\r\n");
      out.write("                //请求前执行，无论请求是否成功\r\n");
      out.write("                beforeSend : function() {\r\n");
      out.write("                    //显示加载动画\r\n");
      out.write("                    load = layer.load(2);\r\n");
      out.write("                },\r\n");
      out.write("                complete : function() {\r\n");
      out.write("                    //关闭加载动画\r\n");
      out.write("                    layer.close(load);\r\n");
      out.write("                },\r\n");
      out.write("                success : function(data) {\r\n");
      out.write("                    if (data.success) {\r\n");
      out.write("                        //隐藏表单\r\n");
      out.write("                        hideDiv();\r\n");
      out.write("                        //操作成功 重新加载表格数据\r\n");
      out.write("                        layui.layer.open({\r\n");
      out.write("                            content : '删除成功!',\r\n");
      out.write("                            btn : [ '确认' ],\r\n");
      out.write("                            yes : function(index, layero) {\r\n");
      out.write("                                //执行重载\r\n");
      out.write("                                layer.closeAll();\r\n");
      out.write("                                table.reload('roleTable', {\r\n");
      out.write("                                    page : {\r\n");
      out.write("                                        curr : 1 //重新从第 1 页开始\r\n");
      out.write("                                    }\r\n");
      out.write("                                });\r\n");
      out.write("                            },\r\n");
      out.write("                            cancel : function() {\r\n");
      out.write("                                //执行重载\r\n");
      out.write("                                layer.closeAll();\r\n");
      out.write("                                table.reload('roleTable', {\r\n");
      out.write("                                    page : {\r\n");
      out.write("                                        curr : 1 //重新从第 1 页开始\r\n");
      out.write("                                    }\r\n");
      out.write("                                });\r\n");
      out.write("                            },\r\n");
      out.write("                        })\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                error : function() {\r\n");
      out.write("                    //隐藏表单\r\n");
      out.write("                    hideDiv();\r\n");
      out.write("                    //操作成功 重新加载表格数据\r\n");
      out.write("                    layui.layer.open({\r\n");
      out.write("                        content : '删除失败!',\r\n");
      out.write("                        btn : [ '确认' ],\r\n");
      out.write("                        yes : function(index, layero) {\r\n");
      out.write("                            layer.closeAll();\r\n");
      out.write("                        },\r\n");
      out.write("                        cancel : function() {\r\n");
      out.write("                            layer.closeAll();\r\n");
      out.write("                        },\r\n");
      out.write("                    })\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        //点击添加按钮后的处理\r\n");
      out.write("        $('#addBtn').click(function() {\r\n");
      out.write("            //显示表单\r\n");
      out.write("            showRoleDiv('添加职位');\r\n");
      out.write("            //设置值\r\n");
      out.write("            form.val('myform', {\r\n");
      out.write("                \"id\" : \"\",\r\n");
      out.write("            })\r\n");
      out.write("            //设置form表单提交地址\r\n");
      out.write("            formUrl = \"role/addRole\"; //重要，必填属性\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        /**\r\n");
      out.write("                        获取权限树\r\n");
      out.write("          roleid 角色id\r\n");
      out.write("        **/\r\n");
      out.write("        function getPermissionTree(roleid){\r\n");
      out.write("            $.ajax({\r\n");
      out.write("            \turl:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/permiss/getPermissionTree\",\r\n");
      out.write("            \ttype:\"get\",\r\n");
      out.write("            \tdata:{},\r\n");
      out.write("            \tasync:false,\r\n");
      out.write("            \tdataType:\"json\",\r\n");
      out.write("            \tbeforeSend:function(){\r\n");
      out.write("            \t\tloading = layer.load();\r\n");
      out.write("            \t},\r\n");
      out.write("            \tsuccess:function(data){\r\n");
      out.write("            \t\tif(data != null ){\r\n");
      out.write("            \t\t\t\r\n");
      out.write("            \t\t\t//获取这个角色所拥有的权限\r\n");
      out.write("            \t\t\t$.ajax({\r\n");
      out.write("            \t\t\t\turl: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/role/findRolePermissionId\",\r\n");
      out.write("            \t\t\t\ttype:\"post\",\r\n");
      out.write("            \t\t\t\tdata:{\r\n");
      out.write("            \t\t\t\t\t\"roleId\" : roleid,\r\n");
      out.write("            \t\t\t\t},\r\n");
      out.write("            \t\t\t\tdataType:\"json\",\r\n");
      out.write("            \t\t\t\tasync:false,\r\n");
      out.write("            \t\t\t\tbeforeSend:function(){\r\n");
      out.write("            \t\t\t\t\tloading = layer.load();\r\n");
      out.write("            \t\t\t\t},\r\n");
      out.write("            \t\t\t\tsuccess:function(result){\r\n");
      out.write("            \t\t\t\t\tif(result != null){\r\n");
      out.write("            \t\t\t\t\t\tconsole.log(\"用户拥有的权限ID: \"+result.result);\r\n");
      out.write("            \t\t\t\t\t\tpermissionJson = createPermissionTree(data.tree, result.result); //构建权限树\r\n");
      out.write("            \t\t\t\t\t}\r\n");
      out.write("            \t\t\t\t},\r\n");
      out.write("            \t\t\t\terror:function(){\r\n");
      out.write("            \t\t\t\t\tlayer.msg(\"服务器开小差了\");\r\n");
      out.write("            \t\t\t\t},\r\n");
      out.write("            \t\t\t\tcomplete:function(){\r\n");
      out.write("            \t\t\t\t\tlayer.close(loading);\r\n");
      out.write("            \t\t\t\t}\r\n");
      out.write("            \t\t\t})\r\n");
      out.write("            \t\t\t\r\n");
      out.write("            \t\t\t\r\n");
      out.write("            \t\t}\r\n");
      out.write("            \t},\r\n");
      out.write("            \tcomplete:function(){\r\n");
      out.write("            \t\tlayer.close(loading);\r\n");
      out.write("            \t},\r\n");
      out.write("            \terror:function(){\r\n");
      out.write("            \t\tlayer.msg(\"服务器开小差了!\");\r\n");
      out.write("            \t}\r\n");
      out.write("            })\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        /**\r\n");
      out.write("                    构建权限树\r\n");
      out.write("        */\r\n");
      out.write("        function createPermissionTree(tree, data){\r\n");
      out.write("        \tif(tree == null){\r\n");
      out.write("                return null;\r\n");
      out.write("            }\r\n");
      out.write("            var treeNode = [];\r\n");
      out.write("            for(var i=0;i<tree.length; i++){\r\n");
      out.write("            \tvar flag = false;\r\n");
      out.write("            \tif(data != null){\r\n");
      out.write("            \t\tfor(j=0;j<data.length;j++){\r\n");
      out.write("                        if(data[j].permissionId == tree[i].id){\r\n");
      out.write("                            flag = true;\r\n");
      out.write("                            break;\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("            \t}\r\n");
      out.write("            \t\r\n");
      out.write("            \tvar node = {\r\n");
      out.write("                        \"title\" : tree[i].title,\r\n");
      out.write("                        \"data\": createPermissionTree(tree[i].childPermission, data),\r\n");
      out.write("                        \"value\" : tree[i].id,\r\n");
      out.write("                        \"checked\": flag,\r\n");
      out.write("                   }\r\n");
      out.write("                treeNode.push(node);\r\n");
      out.write("            }\r\n");
      out.write("            return treeNode;\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f0 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    _jspx_th_shiro_005fhasPermission_005f0.setPageContext(_jspx_page_context);
    _jspx_th_shiro_005fhasPermission_005f0.setParent(null);
    // /views/role/role.jsp(16,12) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_shiro_005fhasPermission_005f0.setName("4001");
    int _jspx_eval_shiro_005fhasPermission_005f0 = _jspx_th_shiro_005fhasPermission_005f0.doStartTag();
    if (_jspx_eval_shiro_005fhasPermission_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("\t\t        <label style=\"margin-left: 20px;\" style=\"\" class=\"layui-label\">职位名：</label>\r\n");
        out.write("\t\t\r\n");
        out.write("\t\t        <div style=\"width: 200px;\" class=\"layui-inline\">\r\n");
        out.write("\t\t            <input id=\"roleName\" type=\"text\" name=\"name\" placeholder=\"请输入职位名\"\r\n");
        out.write("\t\t                autocomplete=\"off\" class=\"layui-input\">\r\n");
        out.write("\t\t        </div>\r\n");
        out.write("\t\t\r\n");
        out.write("\t\t        <button style=\"margin-left: 20px;\" id=\"searchBtn\" class=\"layui-btn\"\r\n");
        out.write("\t\t            type=\"button\" lay-filter=\"roleForm\">搜索</button>\r\n");
        out.write("\t        ");
        int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_shiro_005fhasPermission_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f0);
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f1 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    _jspx_th_shiro_005fhasPermission_005f1.setPageContext(_jspx_page_context);
    _jspx_th_shiro_005fhasPermission_005f1.setParent(null);
    // /views/role/role.jsp(27,9) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_shiro_005fhasPermission_005f1.setName("4003");
    int _jspx_eval_shiro_005fhasPermission_005f1 = _jspx_th_shiro_005fhasPermission_005f1.doStartTag();
    if (_jspx_eval_shiro_005fhasPermission_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("\t           <button id=\"addBtn\" class=\"layui-btn layui-btn-normal\">添加</button>\r\n");
        out.write("\t        ");
        int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_shiro_005fhasPermission_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f1);
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f2 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    _jspx_th_shiro_005fhasPermission_005f2.setPageContext(_jspx_page_context);
    _jspx_th_shiro_005fhasPermission_005f2.setParent(null);
    // /views/role/role.jsp(34,8) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_shiro_005fhasPermission_005f2.setName("4002");
    int _jspx_eval_shiro_005fhasPermission_005f2 = _jspx_th_shiro_005fhasPermission_005f2.doStartTag();
    if (_jspx_eval_shiro_005fhasPermission_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("<a class=\"layui-btn layui-btn-xs\" lay-event=\"edit\">编辑</a>");
        int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f2.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_shiro_005fhasPermission_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f2);
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f3 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    _jspx_th_shiro_005fhasPermission_005f3.setPageContext(_jspx_page_context);
    _jspx_th_shiro_005fhasPermission_005f3.setParent(null);
    // /views/role/role.jsp(35,8) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_shiro_005fhasPermission_005f3.setName("4004");
    int _jspx_eval_shiro_005fhasPermission_005f3 = _jspx_th_shiro_005fhasPermission_005f3.doStartTag();
    if (_jspx_eval_shiro_005fhasPermission_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("<a class=\"layui-btn layui-btn-danger layui-btn-xs\" lay-event=\"delete\">删除</a>");
        int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f3.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_shiro_005fhasPermission_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f3);
      return true;
    }
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f3);
    return false;
  }

  private boolean _jspx_meth_shiro_005fhasPermission_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  shiro:hasPermission
    org.apache.shiro.web.tags.HasPermissionTag _jspx_th_shiro_005fhasPermission_005f4 = (org.apache.shiro.web.tags.HasPermissionTag) _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.get(org.apache.shiro.web.tags.HasPermissionTag.class);
    _jspx_th_shiro_005fhasPermission_005f4.setPageContext(_jspx_page_context);
    _jspx_th_shiro_005fhasPermission_005f4.setParent(null);
    // /views/role/role.jsp(36,8) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_shiro_005fhasPermission_005f4.setName("4005");
    int _jspx_eval_shiro_005fhasPermission_005f4 = _jspx_th_shiro_005fhasPermission_005f4.doStartTag();
    if (_jspx_eval_shiro_005fhasPermission_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("<a class=\"layui-btn layui-btn-xs layui-btn-normal\" lay-event=\"allot\">分配权限</a>");
        int evalDoAfterBody = _jspx_th_shiro_005fhasPermission_005f4.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_shiro_005fhasPermission_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f4);
      return true;
    }
    _005fjspx_005ftagPool_005fshiro_005fhasPermission_0026_005fname.reuse(_jspx_th_shiro_005fhasPermission_005f4);
    return false;
  }
}
